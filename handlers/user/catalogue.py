import sqlite3

from aiogram import Router, Bot
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot import TOKEN
from database import DB_NAME
from database.admin.admin import get_admin_id

router = Router()

async def save_link_request(telegram_id: int, channel_name: str):
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()

    message = f"üõ° –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Å—ã–ª–∫—É –∫–∞–Ω–∞–ª–∞ {channel_name} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID {telegram_id}"

    cursor.execute('''
        INSERT INTO link_requests (telegram_id, channel_name, message)
        VALUES (?, ?, ?)
    ''', (telegram_id, channel_name, message))
    conn.commit()
    conn.close()

    admin_id = get_admin_id()
    if admin_id:
        kb = InlineKeyboardBuilder()
        kb.row(InlineKeyboardButton(text='üîë –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Å—Å—ã–ª–∫–∏', callback_data='view_link_request'))

        bot = Bot(token=TOKEN)
        await bot.send_message(
            admin_id,
            f"üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª: {channel_name}.",
            reply_markup=kb.as_markup()
        )


@router.callback_query(lambda c: c.data == 'catalogue')
async def show_catalogue(callback_query: CallbackQuery):
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text='Photos Only - 45 üíé', callback_data='buy_photos')
    )
    kb.row(
        InlineKeyboardButton(text='Videos + Photos - 90 üíé', callback_data='buy_videos_photos')
    )

    await callback_query.message.answer(
        'üè∑Ô∏è –°–µ–π—á–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ 10%! üè∑Ô∏è\n\n'
        'Photos - 50 ‚Üí 45 üíé\n'
        'Videos + Photos - 100 ‚Üí 90 üíé',
        reply_markup=kb.as_markup()
    )


@router.callback_query(lambda c: c.data == 'buy_photos')
async def buy_photos(callback_query: CallbackQuery):
    price = 45
    channel_name = "Photos"

    await save_link_request(callback_query.from_user.id, channel_name)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∫—É
    await process_purchase(callback_query, price)


@router.callback_query(lambda c: c.data == 'buy_videos_photos')
async def buy_videos_photos(callback_query: CallbackQuery):
    price = 90
    channel_name = "Videos + Photos"

    await save_link_request(callback_query.from_user.id, channel_name)

    await process_purchase(callback_query, price)



async def process_purchase(callback_query: CallbackQuery, price: int):
    telegram_id = callback_query.from_user.id

    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute('SELECT balance FROM users WHERE telegram_id = ?', (telegram_id,))
    user = cursor.fetchone()

    if not user:
        await callback_query.message.answer('‚ùå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.')
        conn.close()
        return

    user_coins = user[0]

    if user_coins >= price:
        new_balance = user_coins - price
        cursor.execute('UPDATE users SET balance = ? WHERE telegram_id = ?', (new_balance, telegram_id))
        conn.commit()

        await callback_query.message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø—Ä–æ—Å! –û–∂–∏–¥–∞–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
    else:
        kb = InlineKeyboardBuilder()
        kb.add(InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å', callback_data='replenish'))

        await callback_query.message.answer(
            f'üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üíé! –í–∞–º –Ω—É–∂–Ω–æ –µ—â—ë {price - user_coins} üíé. –ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É:',
            reply_markup=kb.as_markup()
        )

    conn.close()